<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Doctor Dashboard | Medical AI</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="stylesheet" href="/css/dashboard.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.1/font/bootstrap-icons.min.css">
  <style>
    body.light-mode { background: #f9fbfd; color: #212529; }
    body.dark-mode { background: #121212; color: #f1f1f1; }

    .card { border-radius: 15px; }
    .btn-lg {
      border-radius: 40px;
      padding: 10px 20px;
      font-weight: 600;
      min-width: 180px;
    }

    /* ‚úÖ Top button group */
    .action-bar button, .action-bar a {
      margin: 0 5px;
    }

    /* ‚úÖ Patient Image Card */
    .patient-img {
      width: 100%;
      height: 280px;
      object-fit: contain;   /* show entire image */
      background: #f8f9fa;
      border-radius: 12px 12px 0 0;
    }
    .card-body { padding: 15px; }

    /* ‚úÖ Chart Styling */
    canvas {
      width: 100% !important;
      height: 250px !important; /* balanced, no vertical stretch */
    }
  </style>
</head>
<body class="light-mode">

  <!-- ‚úÖ Navbar include -->
  <%- include('partials/navbar') %>

  <!-- ‚úÖ Top Action Bar -->
  <div class="container mt-3">
    <div class="d-flex justify-content-center action-bar flex-wrap">
      <a href="/messages/<%= patient._id %>" class="btn btn-outline-primary btn-lg shadow-sm">
        üí¨ Message Patient
      </a>

      <% if (patient) { %>
        <button class="btn btn-info btn-lg shadow-sm" onclick="sendDummyData('<%= patient._id %>')">
          üß™ Send Dummy Data
        </button>
        <button class="btn btn-primary btn-lg shadow-sm" onclick="getAIInsights('<%= patient._id %>')">
          ü§ñ AI Insights
        </button>
      <% } else { %>
        <button class="btn btn-secondary btn-lg shadow-sm" disabled>üß™ Send Dummy Data</button>
        <button class="btn btn-secondary btn-lg shadow-sm" disabled>ü§ñ AI Insights</button>
      <% } %>
    </div>
  </div>

  <!-- ‚úÖ KPI Cards -->
  <div class="container py-4">
    <div class="row g-4 text-center">
      <div class="col-md-6 col-xl-3"><div class="card shadow-sm p-3"><h6>Total Patients</h6><h3><%= totalPatients %></h3></div></div>
      <div class="col-md-6 col-xl-3"><div class="card shadow-sm p-3"><h6>Today's Appointments</h6><h3><%= appointmentsToday %></h3></div></div>
      <div class="col-md-6 col-xl-3"><div class="card shadow-sm p-3"><h6>Critical Alerts</h6><h3><%= criticalAlerts %></h3></div></div>
      <div class="col-md-6 col-xl-3"><div class="card shadow-sm p-3"><h6>New Patients</h6><h3><%= newPatients %></h3></div></div>
    </div>
  </div>

  <!-- ‚úÖ Page Title -->
  <h2 class="text-center mt-4 text-primary fw-bold">Monitoring: <%= patientName %></h2>

  <!-- ‚úÖ Patient Info + Vitals -->
  <div class="container py-3">
    <div class="row g-4">
      <!-- Patient Info -->
      <div class="col-md-4">
        <div class="card shadow">
          <% if (patient && patient.image) { %>
            <img src="<%= patient.image %>" class="patient-img" alt="Patient Image">
          <% } else { %>
            <img src="/images/profile-placeholder.png" class="patient-img" alt="Default Patient Image">
          <% } %>
          <div class="card-body text-center">
            <h5 class="card-title mb-2"><%= patient?.name || 'No Patient' %></h5>
            <p><strong>Age:</strong> <%= patient?.age || 'N/A' %><br><strong>Gender:</strong> <%= patient?.gender || 'N/A' %></p>
          </div>
        </div>
      </div>

      <!-- Vitals -->
      <div class="col-md-8">
        <div class="row mb-4">
          <div class="col-md-4">
            <div class="card text-white bg-danger shadow text-center">
              <div class="card-header">‚ù§Ô∏è Heart Rate</div>
              <div class="card-body"><h5><%= latest ? latest.heartRate + ' bpm' : 'No data available' %></h5></div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="card text-white bg-primary shadow text-center">
              <div class="card-header">ü´Å SpO‚ÇÇ</div>
              <div class="card-body"><h5><%= latest ? latest.spo2 + ' %' : 'No data available' %></h5></div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="card text-white bg-secondary shadow text-center">
              <div class="card-header">ü©∫ Blood Pressure</div>
              <div class="card-body">
                <% if (latest) { %>
                  <h5><%= latest.systolicBP %> / <%= latest.diastolicBP %> mmHg</h5>
                <% } else { %>
                  <h5>No data available</h5>
                <% } %>
              </div>
            </div>
          </div>
        </div>

        <!-- Charts Row 1 -->
        <div class="row">
          <div class="col-md-6">
            <h5>Heart Rate Trend</h5>
            <canvas id="heartChart" class="border rounded shadow-sm mb-4"></canvas>
          </div>
          <div class="col-md-6">
            <h5>SpO‚ÇÇ Trend</h5>
            <canvas id="spo2Chart" class="border rounded shadow-sm mb-4"></canvas>
          </div>
        </div>

        <!-- Charts Row 2 (BP) -->
        <div class="row">
          <div class="col-12">
            <h5>Blood Pressure Trend</h5>
            <canvas id="bpChart" class="border rounded shadow-sm mb-4"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- ‚úÖ Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const labels = <%- JSON.stringify(labels) %>;
    const heartValues = <%- JSON.stringify(heartValues) %>;
    const spo2Values = <%- JSON.stringify(spo2Values) %>;
    const systolicValues = <%- JSON.stringify(systolicValues || []) %>;
    const diastolicValues = <%- JSON.stringify(diastolicValues || []) %>;

    // Charts
    new Chart(document.getElementById('heartChart'), {
      type: 'line',
      data: { labels, datasets: [{ label: 'Heart Rate', data: heartValues, borderColor: '#e63946', backgroundColor: 'rgba(230,57,70,0.15)', fill: true, tension: 0.4 }] },
      options: { responsive: true }
    });

    new Chart(document.getElementById('spo2Chart'), {
      type: 'line',
      data: { labels, datasets: [{ label: 'SpO‚ÇÇ', data: spo2Values, borderColor: '#0077b6', backgroundColor: 'rgba(0,119,182,0.15)', fill: true, tension: 0.4 }] },
      options: { responsive: true }
    });

    new Chart(document.getElementById('bpChart'), {
      type: 'line',
      data: {
        labels,
        datasets: [
          { label: 'Systolic BP', data: systolicValues, borderColor: 'red', fill: false, tension: 0.4 },
          { label: 'Diastolic BP', data: diastolicValues, borderColor: 'blue', fill: false, tension: 0.4 }
        ]
      },
      options: { responsive: true }
    });

    // ‚úÖ AI Insights Function
    async function getAIInsights(patientId) {
    try {
      // Call Node.js backend route
      const res = await fetch(`/ai/predict/${patientId}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" }
      });

      if (!res.ok) throw new Error("Failed to fetch AI insights");

      const data = await res.json();

      // Show result in alert (can be replaced with a modal)
      alert(
        `AI Insights for ${data.patient.name}:\n` +
        `Status: ${data.prediction.status}\n` +
        `Insight: ${data.prediction.insight}`
      );

    } catch (err) {
      console.error("AI Insights Error:", err);
      alert("‚ùå Could not fetch AI insights");
    }
  }

  // ‚úÖ Send Dummy Data Function (keep as-is)
  async function sendDummyData(patientId) {
    try {
      const res = await fetch(`/simulate/dummy/${patientId}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" }
      });
      const result = await res.json();
      alert(`‚úÖ Dummy data generated for ${result.data.patientName}\nHR: ${result.data.heartRate} bpm\nSpO‚ÇÇ: ${result.data.spo2}%\nBP: ${result.data.systolicBP}/${result.data.diastolicBP} mmHg`);
      window.location.reload();
    } catch (err) {
      console.error("Dummy data error:", err);
      alert("‚ùå Could not generate dummy data");
    }
  }
  </script>
</body>
</html>






